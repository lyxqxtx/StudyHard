
拉取远程分支remoteB并创建对应的新分支localB：
git fetch origin remoteB
git checkout -b localB origin/remoteB

删除本地的远程分支remoteB
git branch --delete(-D) origin/remoteB

删除服务器上的分支remoteB
git push origin -d remoteB

重新关联远程分支remoteB到localB：
git branch --set-up-stream-to=origin/remoteB localB

在指定的版本/tag/分支上创建新分支locaB：
git branch localB xxx

git reset 是重置到某个提交点（版本），这个提交点之后的版本将不保留

git checkout 是检出某个分支，
	使用git checkout -- filename将暂存区的修改返回工作区，但不清除暂存区
	使用git reset --hard head可以清除暂存区,同时将版本库返回工作区？
	
git revert 直接创建一个和指定版本一致的版本，保留至今的所有版本记录

增补一次提交，不会新增提交记录（但git reflog里仍然会有）：
git commit -C head -a --amend

保存现场：
git stash save xxx
恢复现场：git stash pop/apply 
可以使当前修改对其它分支不可见，而直接提交再切换分支无法实现，并且可能产生脏提交

获取远程库但不合并：
git fetch xxx
获取并合并：
git pull

给某个节点（默认为HEAD）给打上tag：
git tag -a xxx -m <msg> <idFlag>	//-a：标签名	-m：注释

查看tag注释：
git show <tagname>

标签删除：
git tag -d <tagname>

标签推送：
git push origin <tagname>

标签全部推送：
git push origin --tags

删除远程标签：先从本地删除，再使用git push origin :refs/tags/<tagname>

git的配置文件：.git/config

为git命令设置别名：
git config --global alias.<shortname> <command>
